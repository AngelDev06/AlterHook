name: CMake

on:
  push:
    branches: [ "main", "aarch64-support" ]
  pull_request:
    branches: [ "main", "aarch64-support" ]

jobs:
  build-and-test:
    name: Build and Test (Windows/Linux)
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
  
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [msvc, clang, gcc]
        arch: [x86, x64]
        build_type: [debug, release]
        include:
          - os: windows-latest
            os_name: windows
            shared_suffix: dll
          - os: ubuntu-latest
            os_name: linux
            shared_suffix: so
        exclude:
          - os: windows-latest
            compiler: gcc
          - os: ubuntu-latest
            compiler: msvc

    steps:
    - uses: actions/checkout@v3

    - name: Set cmake preset
      id: strings
      shell: bash
      run: |
        preset="${{ matrix.os_name }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.build_type }}-${{ matrix.shared_suffix }}"
        echo "cmake-preset=$preset" >> "$GITHUB_OUTPUT"

    - if: ${{ matrix.os_name == 'windows' }}
      name: Use VS shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: ${{ matrix.arch }}
    
    - if: ${{ matrix.os_name == 'linux' }}
      name: Get supported ${{ matrix.compiler }} version
      run: sudo ./scripts/install_compiler.sh ${{ matrix.compiler }} ${{ matrix.arch }}

    - if: ${{ matrix.os_name == 'windows' }}
      name: Get Ninja
      uses: seanmiddleditch/gha-setup-ninja@v4

    - name: Configure CMake
      run: cmake --preset ${{ steps.strings.outputs.cmake-preset }}

    - name: Build
      run: cmake --build "out/build/${{ steps.strings.outputs.cmake-preset }}"

    - name: Test
      working-directory: out/build/${{ steps.strings.outputs.cmake-preset }}
      run: ctest
  
  android-build:
    name: Build and Test (Android)
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      
      matrix:
        compiler: [clang]
        arch: [arm]
        build_type: [debug, release]

    steps:
    - uses: actions/checkout@v3

    - name: Set cmake preset
      id: strings
      shell: bash
      run: |
        echo "cmake-preset=android-${{ matrix.arch }}-${{ matrix.build_type }}-so" >> "$GITHUB_OUTPUT"

    - name: Setup NDK
      id: ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26b
    
    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
    
    - name: Set NDK_ROOT
      shell: bash
      run: echo "NDK_ROOT=${{ steps.ndk.outputs.ndk-path }}" >> "$GITHUB_ENV"
    
    - name: Configure CMake
      run: cmake --preset ${{ steps.strings.outputs.cmake-preset }}
    
    - name: Build
      run: cmake --build "out/build/${{ steps.strings.outputs.cmake-preset }}"
